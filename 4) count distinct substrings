class Node{
  Node * arr[26];
  bool res=false;
    public:
  bool containsKey(char ch){
      return arr[ch-'a']!=NULL;
  }
   void put( char ch,Node * nn){
         arr[ch-'a']=nn;
   }
    Node * getnext(char ch){
        return arr[ch-'a'];
    }
    void setend(){
        res=true;
    }
    bool isend(){
        return res;
    }
};

int countDistinctSubstrings(string &s)
{
    int cnt=0;
    Node * root=new Node();
    int n=s.length();
    for(int i=0;i<n;i++){
        Node * temp=root;
        for(int j=i;j<n;j++){
            char ch=s[j];
            if(!temp->containsKey(ch)){
                cnt++;
                temp->put(ch,new Node());
            }
            temp=temp->getnext(ch);
        }
        temp->setend();
    }
    return cnt+1;
}
